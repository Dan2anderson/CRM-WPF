// <auto-generated />
using System;
using CustomerRelationshipManagment.db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerRelationshipManagment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("CustomerRelationshipManagment.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Acres")
                        .HasColumnType("REAL");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("DateLastMowed")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("DateScheduled")
                        .HasColumnType("TEXT");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("HistoricHoursMowing")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RecentHoursMowing")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Acres = 2.5,
                            Address = "123 Elm St",
                            DateLastMowed = new DateOnly(2025, 4, 20),
                            DateScheduled = new DateOnly(2025, 5, 4),
                            Frequency = "Weekly",
                            HistoricHoursMowing = "[5,6,4]",
                            Name = "jane Doe",
                            Notes = "First-time customer",
                            Phone = "123-456-7890",
                            Price = 150.00m,
                            RecentHoursMowing = 5
                        });
                });

            modelBuilder.Entity("CustomerRelationshipManagment.Models.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Acres")
                        .HasColumnType("REAL");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("DateScheduled")
                        .HasColumnType("TEXT");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("QuotePrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Leads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acres = 3.0,
                            Address = "456 Oak St",
                            DateScheduled = new DateOnly(2025, 5, 11),
                            Frequency = "Bi-Weekly",
                            Name = "John Smith",
                            Notes = "Interested in lawn care services",
                            Phone = "987-654-3210",
                            QuotePrice = 200.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
